iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
# fit logistic regression model
glm.out <- glm(Species ~ Sepal.Length,
data = iris.small,
family = binomial)
# combine fitted values and Species identity
pred_data <- data.frame(probability=glm.out$fitted.values, Species=iris.small$Species)
iris
iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
# fit logistic regression model
glm.out <- glm(Species ~ Sepal.Length,
data = iris.small,
family = binomial)
# combine fitted values and Species identity
pred_data <- data.frame(probability=glm.out$fitted.values, Species=iris.small$Species)
iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
?lag
?na.rm
??na.rm
bumpus <- read.csv("http://wilkelab.org/classes/SDS348/data_sets/bumpus_full.csv")
head(bumpus)
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
pca
library(knitr)
library(ggplot2)
library(grid) # for `arrow()`
library(dplyr)
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
pca
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
bumpus.pca <- data.frame(bumpus,pca$x)
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Sex)) + geom_point()
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Age)) + geom_point()
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Survival)) + geom_point()
pca$rotation
rotation.data <- data.frame(pca$rotation, variable=row.names(pca$rotation))
arrow_style <- arrow(length = unit(0.05, "inches"),
type = "closed")
ggplot(rotation_data) +
geom_segment(aes(xend=PC1, yend=PC2), x=0, y=0, arrow=arrow_style) +
geom_text(aes(x=PC1, y=PC2, label=variable), hjust=0, size=3, color='red') +
xlim(-1.,1.25) +
ylim(-1.,1.) +
coord_fixed()
rotation_data <- data.frame(pca$rotation, variable=row.names(pca$rotation))
arrow_style <- arrow(length = unit(0.05, "inches"),
type = "closed")
ggplot(rotation_data) +
geom_segment(aes(xend=PC1, yend=PC2), x=0, y=0, arrow=arrow_style) +
geom_text(aes(x=PC1, y=PC2, label=variable), hjust=0, size=3, color='red') +
xlim(-1.,1.25) +
ylim(-1.,1.) +
coord_fixed()
?glm
head(bumpus)
glm.out <- glm(Survival ~ Sex:Skull_Width, data = bumpus, family = binomial)
glm.out
glm.out <- glm(Survival ~ Sex:Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out.complete <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data=bumpus, family="binomial")
summary(glm.out.complete)
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(ggplot2)
x = 2
x
y=8
k->c(4,6,7)
k<- c(4,6,7)
k
k*2
k/2
sum(k)
mean(k)
median(k)
sd(k)
k <- c(4,6,7)
x
k[2]
k >= 6
v = k>=6
v
k[v]
d <- data.frame(student_name=c('Harry','Ron','Hermione'), student_last_name=c('Potter','Weasley','Granger'))
d
d[1,2]
d[1,]
d[,1]
d$student_name
d$age <- c(11,12,13)
d
d$age > 11
v <- d$age > 11
d$student_name[v]
d %>% filter(age > 11)
d %>% filter(age > 11) %>% select(student_name, student_last_name)
d %>% filter(age > 11) %>% select(student_name)
?select
d %>% filter(age > 11) %>% select(student_name)
library(MASS)
head(iris)
d %>% filter(age > 11) %>% select(d,student_name)
d %>% filter(age > 11) %>% select(student_name)
d %>% filter(age > 11) %>% select(-student_last_name)
d %>% select(-student_last_name)
select(d,-student_last_name)
d %>% filter(age > 11) %>% select(-'student_last_name')
d %>% filter(age > 11) %>% select('student_last_name')
d
d %>% filter(age > 11) #%>% select(student_last_name)
table(iris$Species)
library(dplyr)
setosa_data <- iris %>% filter(iris,Species=='setosa')
setosa_data <- iris %>% filter(Species=='setosa')
setosa_data
table(setosa_data$Species)
pl_data <- iris %>% filter(Petal.Length > 6)
pl_data
pl_sw_data <- iris %>% filter(Petal.Length > 6, Sepal.Width > 3)
pl_sw_data
d %>% select(-age)
d
d <- arrange(iris, Sepal.Length)
d
d <- arrange(iris, Sepal.Length, Petal.Length)
d
summarise(d)
summarise(iris)
gr <- iris %>% group_by(Species)
d <- summarise(gr, Mean.Sepal.Length = mean(Sepal.Length))
d
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length))+geom_point()
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()
ggplot(iris, aes(x=Sepal.Length))+geom_histogram()
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density(alpha=.5)
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density2d(alpha=.5)
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density(alpha=.5)
ggplot(iris, aes(x=Species,y=Sepal.Length,color=Species))+geom_boxplot()
ggplot(iris, aes(x=Species,y=Sepal.Length,color=Species))+geom_point()+facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,fill=Species))+geom_density(alpha=.5)
cor.test(iris$Sepal.Length,iris$Petal.Length)
summary(glm.out)
glm.out <- glm(Species ~ Sepal.Width + Petal.Width + Petal.Length, data=iris.small, family=binomial)
glm.out <- glm(Species ~ Sepal.Width + Petal.Width + Petal.Length, data=iris, family=binomial)
summary(glm.out)
install.packages("Biostrings")
install.packages("cgh")
debugSource('~/GitHub/bees_knees/ortho_work/organism_ortho_mapper.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/ortho_work/organism_ortho_mapper.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/ortho_work/organism_ortho_mapper.R', echo=TRUE)
View(organism_pairs_df)
