iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
# fit logistic regression model
glm.out <- glm(Species ~ Sepal.Length,
data = iris.small,
family = binomial)
# combine fitted values and Species identity
pred_data <- data.frame(probability=glm.out$fitted.values, Species=iris.small$Species)
iris
iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
# fit logistic regression model
glm.out <- glm(Species ~ Sepal.Length,
data = iris.small,
family = binomial)
# combine fitted values and Species identity
pred_data <- data.frame(probability=glm.out$fitted.values, Species=iris.small$Species)
iris.small <- filter(iris, Species %in% c("virginica", "versicolor"))
?lag
?na.rm
??na.rm
bumpus <- read.csv("http://wilkelab.org/classes/SDS348/data_sets/bumpus_full.csv")
head(bumpus)
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
pca
library(knitr)
library(ggplot2)
library(grid) # for `arrow()`
library(dplyr)
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
pca
bumpus %>% select(-Sex,-Age,-Survival) %>% scale() %>% prcomp() -> pca
bumpus.pca <- data.frame(bumpus,pca$x)
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Sex)) + geom_point()
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Age)) + geom_point()
ggplot(bumpus.pca, aes(x=PC1, y=PC2, color=Survival)) + geom_point()
pca$rotation
rotation.data <- data.frame(pca$rotation, variable=row.names(pca$rotation))
arrow_style <- arrow(length = unit(0.05, "inches"),
type = "closed")
ggplot(rotation_data) +
geom_segment(aes(xend=PC1, yend=PC2), x=0, y=0, arrow=arrow_style) +
geom_text(aes(x=PC1, y=PC2, label=variable), hjust=0, size=3, color='red') +
xlim(-1.,1.25) +
ylim(-1.,1.) +
coord_fixed()
rotation_data <- data.frame(pca$rotation, variable=row.names(pca$rotation))
arrow_style <- arrow(length = unit(0.05, "inches"),
type = "closed")
ggplot(rotation_data) +
geom_segment(aes(xend=PC1, yend=PC2), x=0, y=0, arrow=arrow_style) +
geom_text(aes(x=PC1, y=PC2, label=variable), hjust=0, size=3, color='red') +
xlim(-1.,1.25) +
ylim(-1.,1.) +
coord_fixed()
?glm
head(bumpus)
glm.out <- glm(Survival ~ Sex:Skull_Width, data = bumpus, family = binomial)
glm.out
glm.out <- glm(Survival ~ Sex:Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out.complete <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data=bumpus, family="binomial")
summary(glm.out.complete)
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
glm.out <- glm(Survival ~ Sex + Age + Length + Wingspread + Weight + Skull_Length + Humerus_Length + Femur_Length + Tarsus_Length + Sternum_Length + Skull_Width, data = bumpus, family = 'binomial')
glm.out
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("ggplot2", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("dplyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("tidyr", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library("MASS", lib.loc="/Library/Frameworks/R.framework/Versions/3.2/Resources/library")
library(ggplot2)
x = 2
x
y=8
k->c(4,6,7)
k<- c(4,6,7)
k
k*2
k/2
sum(k)
mean(k)
median(k)
sd(k)
k <- c(4,6,7)
x
k[2]
k >= 6
v = k>=6
v
k[v]
d <- data.frame(student_name=c('Harry','Ron','Hermione'), student_last_name=c('Potter','Weasley','Granger'))
d
d[1,2]
d[1,]
d[,1]
d$student_name
d$age <- c(11,12,13)
d
d$age > 11
v <- d$age > 11
d$student_name[v]
d %>% filter(age > 11)
d %>% filter(age > 11) %>% select(student_name, student_last_name)
d %>% filter(age > 11) %>% select(student_name)
?select
d %>% filter(age > 11) %>% select(student_name)
library(MASS)
head(iris)
d %>% filter(age > 11) %>% select(d,student_name)
d %>% filter(age > 11) %>% select(student_name)
d %>% filter(age > 11) %>% select(-student_last_name)
d %>% select(-student_last_name)
select(d,-student_last_name)
d %>% filter(age > 11) %>% select(-'student_last_name')
d %>% filter(age > 11) %>% select('student_last_name')
d
d %>% filter(age > 11) #%>% select(student_last_name)
table(iris$Species)
library(dplyr)
setosa_data <- iris %>% filter(iris,Species=='setosa')
setosa_data <- iris %>% filter(Species=='setosa')
setosa_data
table(setosa_data$Species)
pl_data <- iris %>% filter(Petal.Length > 6)
pl_data
pl_sw_data <- iris %>% filter(Petal.Length > 6, Sepal.Width > 3)
pl_sw_data
d %>% select(-age)
d
d <- arrange(iris, Sepal.Length)
d
d <- arrange(iris, Sepal.Length, Petal.Length)
d
summarise(d)
summarise(iris)
gr <- iris %>% group_by(Species)
d <- summarise(gr, Mean.Sepal.Length = mean(Sepal.Length))
d
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length))+geom_point()
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()
ggplot(iris, aes(x=Sepal.Length))+geom_histogram()
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density(alpha=.5)
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density2d(alpha=.5)
ggplot(iris, aes(x=Sepal.Length,color=Species))+geom_density(alpha=.5)
ggplot(iris, aes(x=Species,y=Sepal.Length,color=Species))+geom_boxplot()
ggplot(iris, aes(x=Species,y=Sepal.Length,color=Species))+geom_point()+facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,y=Petal.Length,color=Species))+geom_point()+facet_wrap(~Species)
ggplot(iris, aes(x=Sepal.Length,fill=Species))+geom_density(alpha=.5)
cor.test(iris$Sepal.Length,iris$Petal.Length)
summary(glm.out)
glm.out <- glm(Species ~ Sepal.Width + Petal.Width + Petal.Length, data=iris.small, family=binomial)
glm.out <- glm(Species ~ Sepal.Width + Petal.Width + Petal.Length, data=iris, family=binomial)
summary(glm.out)
install.packages("Biostrings")
install.packages("cgh")
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
merge(species_ortholog_rows_1_10, species_ortholog_rows_1_10) -> test
View(test)
View(species_ortholog_rows_1_11)
View(species_ortholog_rows_1_12)
rbind(species_ortholog_rows_1_10, species_ortholog_rows_1_10) -> test
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
rbind(species_ortholog_rows_1_10, species_ortholog_rows_1_10) -> test
rbind(species_ortholog_rows_1_10, species_ortholog_rows_1_11) -> test
View(test)
View(species_ortholog_rows_1_11)
View(species_ortholog_rows_1_10)
merge(species_ortholog_rows_1_10, species_ortholog_rows_1_11) -> test
merge(data_frame_list) -> test
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_species_orthologs_combined`)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_species_orthologs_combined`)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
c
View(`1_species_orthologs_combined`)
test <- rbind(var_name, species_ortholog_rows_1_1)
warnins()
warnings()
View(species_ortholog_rows_3_9)
View(test)
test <- rbind(var_name, species_ortholog_rows_3_1)
View(species_ortholog_rows_3_36)
View(species_ortholog_rows_3_1)
var_name
View(species_ortholog_rows_3_36)
test <- rbind(var_name, species_ortholog_rows_3_35)
View(species_ortholog_rows_3_35)
View(species_ortholog_rows_3_36)
test <- rbind(species_ortholog_rows_3_36, species_ortholog_rows_3_35)
View(test)
rbind(species_ortholog_rows_3_36, species_ortholog_rows_3_35)
rm
cat
rm(list = ls())
if (is.integer(dev.list())){dev.off()}
cat("\014")
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
cat("\014")
combined_data_frame = paste0(x,'_species_orthologs_combined')
assign(combined_data_frame, paste0('species_ortholog_rows_',x,'_1'))
df(paste0('species_ortholog_rows_',x,'_1'))
assign(combined_data_frame, rbind(paste0('species_ortholog_rows_',x,'_1'), paste0('species_ortholog_rows_',x,'_2')))
View(`3_species_orthologs_combined`)
assign(combined_data_frame, rbind('species_ortholog_rows_3_1'), 'species_ortholog_rows_3_2')))
assign(combined_data_frame, rbind('species_ortholog_rows_3_1', 'species_ortholog_rows_3_2'))
assign(combined_data_frame, rbind(species_ortholog_rows_3_1, species_ortholog_rows_3_2))
paste0('species_ortholog_rows_',x,'_1')
paste('species_ortholog_rows_',x,'_1')
paste0('species_ortholog_rows_',x,'_1')
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
data_frame_list[1]
assign(combined_data_frame, rbind(species_ortholog_rows_3_1, species_ortholog_rows_3_2))
assign(combined_data_frame, rbind(paste0('species_ortholog_rows_',x,'_1'), paste0('species_ortholog_rows_',x,'_2')))
paste0('species_ortholog_rows_',x,'_1')
mget(paste0('species_ortholog_rows_',x,'_1'))
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_species_orthologs_combined`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
assign(combined_data_frame, rbind(paste0('species_ortholog_rows_',x,'_1'), paste0('species_ortholog_rows_',x,'_2')))
assign(combined_data_frame, rbind(mget(paste0('species_ortholog_rows_',x,'_1')), mget(paste0('species_ortholog_rows_',x,'_2')))
assign(combined_data_frame, rbind(get(paste0('species_ortholog_rows_',x,'_1')), get(paste0('species_ortholog_rows_',x,'_2')))
get(paste0('species_ortholog_rows_',x,'_1'))
assign(combined_data_frame, rbind(get(paste0('species_ortholog_rows_3_1')), get(paste0('species_ortholog_rows_3_2')))
rbind(get(paste0('species_ortholog_rows_3_1')), get(paste0('species_ortholog_rows_3_2')) -> test
rbind(species_ortholog_rows_3_1,species_ortholog_rows_3_2)
rbind(species_ortholog_rows_3_1,species_ortholog_rows_3_2) ->test
rbind(do.call(paste0('species_ortholog_rows_3_1')), do.call(paste0('species_ortholog_rows_3_2')) -> test
do.call(paste0('species_ortholog_rows_3_1'))
parse(paste0('species_ortholog_rows_3_1'))
eval(paste0('species_ortholog_rows_3_1'))
parse(eval(paste0('species_ortholog_rows_3_1')))
eval(as.name(paste0('species_ortholog_rows_3_1')))
eval(as.symbol(paste0('species_ortholog_rows_3_1')))
as.symbol(paste0('species_ortholog_rows_3_1'))
as.name(paste0('species_ortholog_rows_3_1'))
assign(combined_data_frame, rbind(as.name(paste0('species_ortholog_rows_',x,'_1')), as.name(paste0('species_ortholog_rows_',x,'_2'))))
assign(combined_data_frame, rbind(as.symbol(paste0('species_ortholog_rows_',x,'_1')), as.symbol(paste0('species_ortholog_rows_',x,'_2'))))
data_frame_list[[1]]
data_frame_list[1]
rbind(data_frame_list[[1]], data_frame_list[[2]]) -> test
rbind(as.name(data_frame_list[[1]]), as.name(data_frame_list[[2]]) -> test
rbind(as.name(data_frame_list[[1]]), as.name(data_frame_list[[2]])) -> test
as.name(data_frame_list[[1]])
typeof(as.name(data_frame_list[[1]]))
typeof(species_ortholog_rows_3_3)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(species_ortholog_rows_1_10)
View(`1_species_orthologs_combined`)
View(`1_species_orthologs_combined`)
install.packages("data.table")
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
View(`3_species_orthologs_combined`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
final_list[grep(OG\d*:, input_groups$rn), ]
final_list[grep("OG\d*:", input_groups$rn), ]
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
grep("OG[:digit:]*:", input_groups$rn)
View(final_list)
test <- final_list$rn
grep("^\t[:digit:]*:", input_groups$rn)
grep("[:alnum:]*:", input_groups$rn)
grep("[:alnum:]:", input_groups$rn)
grep("[:alnum:]+:", input_groups$rn)
grep("[:alnum:]*:", input_groups$rn)
grep("[:alnum:]*\:", input_groups$rn)
grep([:alnum:]*\:, input_groups$rn)
grep("[:alnum:]*\:", input_groups$rn)
grep("[:alnum:]*:", input_groups$rn)
grep("[[:alnum:]]*:", input_groups$rn)
grep("[[:alnum:]]*:", "OG0000000:")
grep("[[:alnum:]]*:", "OG0000000.1:")
grep("[[:alnum:]]:", "OG0000000.1:")
grep("[[:digit:]]:", "OG0000000.1:")
grep("OG[[:digit:]]:", "OG0000000.1:")
grep("OG[[:digit:]]:", "OG0000000:")
grep("OG[[:digit:]]*:", "OG0000000:")
grep("OG[[:digit:]]*:", "OG0000000.1:")
grep("OG[[:digit:]]*:", "OG0000001.1:")
grep("OG[[:digit:]]*:", "OG0000001:")
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
final_list$rn
grep("OG[[:digit:]]*:", "OG0000001.1:")
grep("OG[[:digit:]]*:", "OG0000001:")
grep("OG[[:digit:]]*:", "OG000253452431:")
grep("OG[[:digit:]]*:", "OG000253452431.1:")
grep("OG[[:digit:]]*:", final_list$rn[1])
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
final_list[grep('OG[[:digit:]]*:', 'OG0000000:'), ]
grep('OG[[:digit:]]*:', 'OG0000000:')
grep('OG[[:digit:]]*:', 'OG0000000:1')
grep(':$', 'OG0000000:')
grep(':$', 'OG0000000:1')
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
final_list[[rn]]
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
View(`3_species_orthologs_combined`)
View(`2_species_orthologs_combined`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`3_species_orthologs_combined`)
View(final_list)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R')
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`3_species_orthologs_combined`)
test<- add_rownames(`3_species_orthologs_combined`, "rn")
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`3_species_orthologs_combined_reduced`)
View(`3_species_orthologs_combined_reduced`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(final_list)
length(rnames_final_list)
length(rnames)
View(final_list)
View(`1_species_orthologs_combined`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_species_orthologs_combined`)
View(`2_species_orthologs_combined`)
View(`1_species_orthologs_combined_reduced`)
View(`2_species_orthologs_combined_reduced`)
View(`3_species_orthologs_combined_reduced`)
View(final_list)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
rnames_final_list <- final_list$rn
rownames(final_list) <- rnames_final_list
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_species_orthologs_combined`)
View(`1_species_orthologs_combined_reduced`)
View(`1_species_orthologs_combined_reduced`)
test <- merge(`1_species_orthologs_combined_reduced`, `2_species_orthologs_combined_reduced`, by row.names)
test <- merge(1_species_orthologs_combined_reduced, 2_species_orthologs_combined_reduced, by row.names)
test <- merge(1_species_orthologs_combined_reduced, 2_species_orthologs_combined_reduced, by 'row.names')
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test2)
View(test)
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test)
gene_number
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test)
typeof(col_removal)
col_removal
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(test)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(`1_gene_occurence_df`)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
`1_occurences`
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(gene_occurence_df)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(gene_in_species_df)
View(gene_in_species_df)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(gene_occurence_df)
View(genes_in_species_df)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
fig01 <- ggplot(genes_in_species_df, aes(x = shared_num_list, y = occurence_list)) + geom_bar()
view(fig01)
ggplot(genes_in_species_df, aes(x = shared_num_list, y = occurence_list)) + geom_point()
ggplot(genes_in_species_df, aes(x = shared_num_list, y = occurence_list)) + geom_bar()
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar()
ggplot(genes_in_species_df, aes(x = occurence_list)) + geom_bar()
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar()
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar(binwidth = 20)
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar(binwidth = 1)
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar(binwidth = 30)
ggplot(genes_in_species_df, aes(x = shared_num_list)) + geom_bar(binwidth = .1)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
ggplot(genes_in_species_df, aes(factor(occurence_list))) + geom_bar()
ggplot(genes_in_species_df, aes(factor(shared_num_list))) + geom_bar()
mtcars
View(gene_occurence_df)
ggplot(gene_occurence_df, aes(factor(V1))) + geom_bar()
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(input_groups)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(input_groups)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(input_groups)
view(input_groups[x387])
View(input_groups[x387])
View(input_groups[X387])
View(input_groups[X386])
View(input_groups[X100])
View(input_groups[[X100])
View(input_groups[[X100]])
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(input_groups)
input_groups$X1
input_groups$X1[2]
input_groups$X1[3]
input_groups$X1[4]
input_groups$X1[5]
input_groups$X1[1:10]
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
rm(list = ls())
cat("\014")
if (is.integer(dev.list())){dev.off()}
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
no_col <- max(count.fields(filename))
View(input_groups)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
debugSource('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(input_groups)
source('~/GitHub/bees_knees/R_testing/ortho_testing.R', echo=TRUE)
View(conversion_table)
max_genes <- max(count.fields(filename))
max_genes
species_number
View(conversion_table)
species_delim
View(conversion_subset)
assembly_delim
54-32 +1
View(df)
test = ddply(.data=df,.variables=colnames(df),.fun=nrow)
View(test)
tst
test
View(df)
df1 = df
for (j in 1:gene_number){
col_removal = paste0('gene_',j)
df1[col_removal] <-NULL
}
assign('gene_occurence_df', test) #data frame where an orthologous gene is next to the number of species which contain that gene
###*****************************
View(df1)
test = ddply(.data=df1,.variables=colnames(df),.fun=nrow)
test = ddply(.data=df1,.variables=colnames(df1),.fun=nrow)
View(test)
